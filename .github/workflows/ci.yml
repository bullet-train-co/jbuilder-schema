name: CI

on:
  push:
    branches:
      - main

  pull_request:

jobs:
  test:
    if: ${{ false }}  # disable for now
    strategy:
      fail-fast: false
      matrix:
        rails-version:
          - "7.1"
          - "6.1"
          - "main"
        ruby-version:
          - "3.0"
          - "3.2"

    env:
      RAILS_ENV: test
      RAILS_VERSION: ${{ matrix.rails-version }}

    name: ${{ format('Test rails@{0} ruby@{1}', matrix.rails-version, matrix.ruby-version) }}
    runs-on: "ubuntu-latest"

    steps:
    - uses: actions/checkout@v4
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true
    - name: Run tests
      run: bundle exec rake test

  standard:
    if: ${{ false }}  # disable for now
    runs-on: ubuntu-latest
    name: "Standard"
    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.0"
          bundler-cache: true
      - name: Run Standard
        run: bundle exec rake standard

  starter_repo:
    runs-on: ubuntu-latest
    name: Bullet Train Minitest
    strategy:
      fail-fast: false
      matrix:
        # Set identifiers for parallel jobs. These can be anything.
        # For instance if you want a Three Amigos themed pipeline you could use:
        # ci_node_index: [Dusty, Ned, Lucky]
        ci_node_index: [1,2,3,4]
    services:
      postgres:
        image: postgres:11-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: rails_test
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: password
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports:
          - "6379:6379"
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      RAILS_ENV: test
      DATABASE_URL: "postgres://rails:password@localhost:5432/rails_test"
      BUNDLE_JOBS: 2
      BUNDLE_RETRY: 3
    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2"
          bundler-cache: true
      #- uses: actions/setup-node@v3
        #with:
          #node-version-file: .nvmrc
          #cache: 'yarn'
      - run: mkdir -p ./tmp/core
      - run: mkdir -p ./tmp/starter

      - uses: ./.github/actions/checkout-core-repo/
      - uses: ./.github/actions/checkout-starter-repo

      - name: Checkout Core Repo
        run: ../../bin/checkout-core-repo
        working-directory: ./tmp/core
        env:
          TARGET_BRANCH: ${{ github.head_ref }}
      - name: Checkout & Link Starter Repo
        run: ../../bin/checkout-and-link-starter-repo
        working-directory: ./tmp/starter
        env:
          TARGET_BRANCH: ${{ github.head_ref }}
      - run: cat tmp/starter/Gemfile
      - run: cat tmp/starter/Gemfile.lock

      - name: Bundle install
        run: bundle install
        working-directory: ./tmp/starter

      - name: Set up database schema
        run: bin/rails db:schema:load
        working-directory: ./tmp/starter

      - run: yarn install
        working-directory: ./tmp/starter
      - run: yarn build
        working-directory: ./tmp/starter
      - run: yarn build:css
        working-directory: ./tmp/starter

      - run: ls -al
        working-directory: ./tmp/starter

      - run: ls -al bin
        working-directory: ./tmp/starter

      - name: Run Tests
        id: run-tests
        env:
          # Specifies how many jobs you would like to run in parallel,
          # used for partitioning
          CI_NODE_TOTAL: ${{ strategy.job-total }}
          # Use the index from matrix as an environment variable
          CI_NODE_INDEX: ${{ strategy.job-index }}
        continue-on-error: false
        run : bin/parallel-ci
        working-directory: ./tmp/starter

      - name: Test Summary
        uses: test-summary/action@v2
        with:
          paths: "tmp/starter/test/reports/**/TEST-*.xml"
          #output: test-summary.md
        if: always()



